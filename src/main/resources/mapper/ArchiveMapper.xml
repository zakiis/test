<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zakiis.springboot.test.mapper.ArchiveMapper">
  <resultMap id="BaseResultMap" type="com.zakiis.springboot.test.model.Archive">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="field2" jdbcType="DECIMAL" property="field2" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="add_time2" jdbcType="TIMESTAMP" property="addTime2" />
    <result column="add_time3" jdbcType="DATE" property="addTime3" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zakiis.springboot.test.model.Archive">
    <result column="field1" jdbcType="LONGVARCHAR" property="field1" />
  </resultMap>
  <sql id="Base_Column_List">
    id, field2, add_time, add_time2, add_time3
  </sql>
  <sql id="Blob_Column_List">
    field1
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from archive
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from archive
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zakiis.springboot.test.model.Archive">
    insert into archive (id, field2, add_time, 
      add_time2, add_time3, field1
      )
    values (#{id,jdbcType=BIGINT}, #{field2,jdbcType=DECIMAL}, #{addTime,jdbcType=TIMESTAMP}, 
      #{addTime2,jdbcType=TIMESTAMP}, #{addTime3,jdbcType=DATE}, #{field1,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zakiis.springboot.test.model.Archive">
    insert into archive
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="field2 != null">
        field2,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="addTime2 != null">
        add_time2,
      </if>
      <if test="addTime3 != null">
        add_time3,
      </if>
      <if test="field1 != null">
        field1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="field2 != null">
        #{field2,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime2 != null">
        #{addTime2,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime3 != null">
        #{addTime3,jdbcType=DATE},
      </if>
      <if test="field1 != null">
        #{field1,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zakiis.springboot.test.model.Archive">
    update archive
    <set>
      <if test="field2 != null">
        field2 = #{field2,jdbcType=DECIMAL},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime2 != null">
        add_time2 = #{addTime2,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime3 != null">
        add_time3 = #{addTime3,jdbcType=DATE},
      </if>
      <if test="field1 != null">
        field1 = #{field1,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zakiis.springboot.test.model.Archive">
    update archive
    set field2 = #{field2,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      add_time2 = #{addTime2,jdbcType=TIMESTAMP},
      add_time3 = #{addTime3,jdbcType=DATE},
      field1 = #{field1,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zakiis.springboot.test.model.Archive">
    update archive
    set field2 = #{field2,jdbcType=DECIMAL},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      add_time2 = #{addTime2,jdbcType=TIMESTAMP},
      add_time3 = #{addTime3,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>